{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAyCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,CACVR,WACAC,SAEFQ,YAAW,WACLJ,EACFF,EAAQK,GAERJ,EAAOI,E,GAERP,E,IAnDPN,EAAKC,UAAUc,iBAAiB,UAEhC,SAAoBC,GAClBA,EAAIC,iBACJ,IAAMC,EAAU,GACC,IAAIC,SAASnB,EAAKC,WAC1BmB,SAAQ,SAACC,EAAOC,GACvBJ,EAAQI,GAAOD,C,IAKnB,SAAyBH,GACvB,IAAK,IAAIK,EAAQ,EAAGA,EAAQL,EAAQM,OAAQD,IAAS,CAGnCnB,EAFCmB,EAAQ,EACXE,OAAOP,EAAQZ,OAASmB,OAAOP,EAAQQ,MAAQH,GAI1DI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBR,EAAA+B,OAAOC,QAAQ,qBAAoCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC5D0B,QAAS,IACTC,MAAO,QACP5B,SAAU,gBACV6B,SAAU,Q,IAGbC,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBR,EAAA+B,OAAOO,QAAQ,oBAAmCL,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CAC3D0B,QAAS,IACTC,MAAO,QACP5B,SAAU,gBACV6B,SAAU,Q,KAvBlBG,CAAgBnB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formInput: document.querySelector('.form'),\n};\n\nrefs.formInput.addEventListener('submit', submitForm);\n\nfunction submitForm(evt) {\n  evt.preventDefault();\n  const objData = {};\n  const formData = new FormData(refs.formInput);\n  formData.forEach((value, key) => {\n    objData[key] = value;\n  });\n  createFunctions(objData);\n}\n\nfunction createFunctions(objData) {\n  for (let index = 0; index < objData.amount; index++) {\n    const position = index + 1;\n    const delay = Number(objData.delay) + Number(objData.step) * index;\n    const promise = createPromise(position, delay);\n\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 6000,\n          width: '300px',\n          position: 'center-center',\n          fontSize: '13px',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 6000,\n          width: '300px',\n          position: 'center-center',\n          fontSize: '13px',\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejact) => {\n    const shouldResolve = Math.random() > 0.3;\n    const obj = {\n      position,\n      delay,\n    };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        rejact(obj);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formInput","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","rejact","shouldResolve","Math","random","obj","setTimeout","addEventListener","evt","preventDefault","objData","FormData","forEach","value","key","index","amount","Number","step","then","param","Notify","success","concat","timeout","width","fontSize","catch","failure","$ce04d3a99e08e73b$var$createFunctions"],"version":3,"file":"03-promises.c492c961.js.map"}